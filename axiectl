#!/bin/bash

# set -ex

[ -x $(which docker || which docker.io) ] || { echo "no docker?" >&2 ; return 1; }
# command=$1
dockerName=$1
env=$2
file=$3
dockerImage=$4

docker="sudo $(which docker || which docker.io)"


is_logged_in() {
  if [[ ! -f "/root/.docker/config.json" ]]; then
    sudo cat /root/.docker/config.json | jq -r --arg url "gcr.io" '.auths | has($url)'
  else
    echo "false"
  fi
}

_dockerRun() {


  local checkNameRun=$(docker ps -a  -f status=running --format '{{.Names}}' | grep -E "($dockerName-blue|$dockerName-green)")
  
  set -x 
  if [[ $checkNameRun =~ .*blue.* ]]; then
    echo ":: RUNNING GREEN"
    $docker rm -f "$dockerName"-blue
    $docker run --restart=always --env-file /var/www/$env/"$dockerName".env -v /var/www/$env/"$dockerName"/"$dockerName"/$file:/$file --log-opt max-size=100m --name "$dockerName"-green  --network=host -d $dockerImage
  set +x
  elif [[ $checkNameRun =~ .*green.* ]]; then
    echo ":: RUNNING BLUE"
    $docker rm -f "$dockerName"-green
    $docker run --restart=always --env-file /var/www/$env/"$dockerName".env -v /var/www/$env/"$dockerName"/"$dockerName"/$file:/$file --log-opt max-size=100m --name "$dockerName"-blue  --network=host -d $dockerImage
  else
    echo ":: RUNNING DEFAULT BLUE"
    $docker rm -f "$dockerName"-blue
    $docker run --restart=always --env-file /var/www/$env/"$dockerName".env -v /var/www/$env/"$dockerName"/"$dockerName"/$file:/$file --log-opt max-size=100m --name "$dockerName"-blue  --network=host -d $dockerImage
  fi
}

_dockerRunNoMount() {
  echo ":: NO MOUNT VOLME DETECTED"
	local checkNameRun=$(docker ps -a  -f status=running --format '{{.Names}}' | grep -E "($dockerName-blue|$dockerName-green)")
  set -x
  if [[ $checkNameRun =~ .*blue.* ]]; then
    echo ":: RUNNING GREEN"
    $docker rm -f "$dockerName"-blue
    $docker run --restart=always --env-file /var/www/$env/"$dockerName".env --log-opt max-size=100m --name "$dockerName"-green  --network=host -d $dockerImage
  set +x
  elif [[ $checkNameRun =~ .*green.* ]]; then
    echo ":: RUNNING BLUE"
    $docker rm -f "$dockerName"-green
    $docker run --restart=always --env-file /var/www/$env/"$dockerName".env --log-opt max-size=100m --name "$dockerName"-blue  --network=host -d $dockerImage
  else
    echo ":: RUNNING DEFAULT BLUE"
    $docker rm -f "$dockerName"-blue
    $docker run --restart=always --env-file /var/www/$env/"$dockerName".env --log-opt max-size=100m --name "$dockerName"-blue  --network=host -d $dockerImage
  fi
}


### Main ###

if [[ "$(is_logged_in)" == "false" ]]; then
  echo "Need Login to GCR"
  exit 0
fi

if [ -z "$file" ]

then 
    _dockerRunNoMount
else
    _dockerRun
fi
